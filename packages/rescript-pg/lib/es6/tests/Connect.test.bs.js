// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Pg from "../Pg.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function $$then(promise, fn) {
  return promise.then(Curry.__1(fn));
}

test("Connect/disconnect w/o errors (no config)", (function () {
        var client = Pg.Client.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
        var promise = client.connect();
        return promise.then(function (param) {
                    return client.end();
                  });
      }));

test("Connect/disconnect w/o errors", (function () {
        var client = Pg.Client.make("testuser", "testpassword", "localhost", "testdatabase", 5432, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
        var promise = client.connect();
        return promise.then(function (param) {
                    return client.end();
                  });
      }));

test("async password", (function () {
        var makePass1 = function (pass, param) {
          return Promise.resolve(pass);
        };
        var makePass2 = function (pass, param) {
          return Promise.resolve(pass);
        };
        var makePass = Math.random() > 0.5 ? makePass1 : makePass2;
        var client = Pg.Client.make("testuser", Caml_option.some(Curry._1(makePass, "testpassword")), "localhost", "testdatabase", 5432, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined);
        var promise = client.connect();
        return promise.then(function (param) {
                    return client.end();
                  });
      }));

export {
  $$then ,
  
}
/*  Not a pure module */
