// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("rescript-jest/lib/js/Jest.bs.js");
var Curry = require("rescript/lib/js/curry.js");
var Parser$TypesafeSqlExtendedSQL = require("../src/Parser.bs.js");
var Printer$TypesafeSqlExtendedSQL = require("../src/Printer.bs.js");

var ind0 = "";

var ind1 = "  ";

function incInd(ind) {
  return ind + ind1;
}

function showStr(x) {
  return JSON.stringify(x);
}

function showAll(arr, showItem, ind) {
  return "\n" + (ind + ind1) + arr.map(Curry.__1(showItem)).join("\n" + (ind + ind1)) + "\n";
}

function showParams(params, ind) {
  var showNamed = function (param) {
    return param.name + ": " + showLink(param.link, ind + ind1);
  };
  return "{" + showAll(params, showNamed, ind) + ind + "}";
}

function showLink(link, ind) {
  switch (link.TAG | 0) {
    case /* Plain */0 :
        return "$" + link._0.toString();
    case /* Raw */1 :
        return "Raw(" + showAll(link._0, showStr, ind) + ind + ")";
    case /* Batch */2 :
        return "Batch(" + JSON.stringify(link._0) + " " + showParams(link._1, ind) + ")";
    
  }
}

var expectToMatchSnapshot = Jest.makeSnapshotMatcher(function (param) {
      return "SQL = [" + showAll(param[0], showStr, ind0) + "]\nPARAMS = " + showParams(param[1], ind0);
    });

Jest.each([
      "SELECT 1",
      "-- inline\nSELECT /* block */1",
      "SELECT :foo = :bar",
      "SELECT :num:raw<1|2>",
      "SELECT :num:raw<1,|> 2",
      "SELECT :num:raw<<<'<|>'|||'2'>>>",
      "INSERT INTO test (foo, bar) VALUES :values:batch<(:foo, :bar)>",
      "INSERT INTO test (foo, bar) VALUES :values:batch<<(:foo:batch<:bar>)>>",
      "INSERT INTO test (foo, bar) VALUES :values:batch<<(:foo:raw<foo|bar>)>>",
      "INSERT INTO test (foo, bar) VALUES :values:batch<<(:foo /* <comment> */)>>"
    ], "%s", (function (code) {
        return expectToMatchSnapshot(Printer$TypesafeSqlExtendedSQL.print(undefined, Jest.getOkExn(Parser$TypesafeSqlExtendedSQL.parse(code), "File \"Printer.test.res\", line 43, characters 40-47").ast));
      }));

exports.ind0 = ind0;
exports.ind1 = ind1;
exports.incInd = incInd;
exports.showStr = showStr;
exports.showAll = showAll;
exports.showParams = showParams;
exports.showLink = showLink;
exports.expectToMatchSnapshot = expectToMatchSnapshot;
/* expectToMatchSnapshot Not a pure module */
