// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parse("/*
 * @name: test
 */SELECT 1") 1`] = `
Ok({"name":"test"} [
  BlockComment("\\n * @name: test\\n ") at 0-20
  SqlChunk("SELECT 1") at 21-28
])
`;

exports[`parse("/* test 
 abc*/
SELECT /* test2 /* test3 */ */ 1/**/") 1`] = `
Ok({"name":null} [
  BlockComment(" test \\n abc") at 0-14
  SqlChunk("\\nSELECT ") at 15-22
  BlockComment(" test2 /* test3 */ ") at 23-45
  SqlChunk(" 1") at 46-47
  BlockComment("") at 48-51
])
`;

exports[`parse("/*@name: %abc*/SELECT 1") 1`] = `Error("Invalid @name attribute: %abc" at 0-14)`;

exports[`parse("/*@name: */SELECT 1") 1`] = `Error("Invalid @name attribute: " at 0-10)`;

exports[`parse("/*@name: 4abc*/SELECT 1") 1`] = `Error("Invalid @name attribute: 4abc" at 0-14)`;

exports[`parse("/*@name: test*/SELECT 1") 1`] = `
Ok({"name":"test"} [
  BlockComment("@name: test") at 0-14
  SqlChunk("SELECT 1") at 15-22
])
`;

exports[`parse("/*@name: testA4_
@name: test1*/SELECT 1") 1`] = `
Ok({"name":"testA4_"} [
  BlockComment("@name: testA4_\\n@name: test1") at 0-30
  SqlChunk("SELECT 1") at 31-38
])
`;

exports[`parse("/*abc @name: abc*/SELECT 1") 1`] = `
Ok({"name":null} [
  BlockComment("abc @name: abc") at 0-17
  SqlChunk("SELECT 1") at 18-25
])
`;

exports[`parse("-- abc
/* @name: abc*/SELECT 1") 1`] = `
Ok({"name":"abc"} [
  InlineComment(" abc") at 0-5
  SqlChunk("\\n") at 6-6
  BlockComment(" @name: abc") at 7-21
  SqlChunk("SELECT 1") at 22-29
])
`;

exports[`parse("-- test
SELECT -- test2
--
 1-- test3") 1`] = `
Ok({"name":null} [
  InlineComment(" test") at 0-6
  SqlChunk("\\nSELECT ") at 7-14
  InlineComment(" test2") at 15-22
  SqlChunk("\\n") at 23-23
  InlineComment("") at 24-25
  SqlChunk("\\n 1") at 26-28
  InlineComment(" test3") at 29-36
])
`;

exports[`parse("INSERT INTO test (foo, bar) VALUES :values:batch<(:foo, :bar)>") 1`] = `
Ok({"name":null} [
  SqlChunk("INSERT INTO test (foo, bar) VALUES ") at 0-34
  BatchParameter("values" "," [
    SqlChunk("(") at 49-49
    Parameter("foo") at 50-53
    SqlChunk(", ") at 54-55
    Parameter("bar") at 56-59
    SqlChunk(")") at 60-60
  ]) at 35-61
])
`;

exports[`parse("INSERT INTO test (foo, bar) VALUES :values:batch<(:foo, :foo)>") 1`] = `Error("The name \\"foo\\" is already used for another parameter" at 56-59)`;

exports[`parse("INSERT INTO test (foo, bar) VALUES :values:batch<<(:foo /* <comment> */)>>") 1`] = `
Ok({"name":null} [
  SqlChunk("INSERT INTO test (foo, bar) VALUES ") at 0-34
  BatchParameter("values" "," [
    SqlChunk("(") at 50-50
    Parameter("foo") at 51-54
    SqlChunk(" ") at 55-55
    BlockComment(" <comment> ") at 56-70
    SqlChunk(")") at 71-71
  ]) at 35-73
])
`;

exports[`parse("INSERT INTO test (foo, bar) VALUES :values:batch<<(:foo, :bar)>") 1`] = `Error("Was expecting a batch parameter close sequence >>, but reached the end of the string" at 63)`;

exports[`parse("INSERT INTO test (foo, bar) VALUES :values:batch<<(:foo:batch<:bar>)>>") 1`] = `
Ok({"name":null} [
  SqlChunk("INSERT INTO test (foo, bar) VALUES ") at 0-34
  BatchParameter("values" "," [
    SqlChunk("(") at 50-50
    BatchParameter("foo" "," [
      Parameter("bar") at 62-65
    ]) at 51-66
    SqlChunk(")") at 67-67
  ]) at 35-69
])
`;

exports[`parse("INSERT INTO test (foo, bar) VALUES :values:batch<<(:foo:raw<foo|bar>)>>") 1`] = `
Ok({"name":null} [
  SqlChunk("INSERT INTO test (foo, bar) VALUES ") at 0-34
  BatchParameter("values" "," [
    SqlChunk("(") at 50-50
    RawParameter("foo" [
      "foo"
      "bar"
    ]) at 51-67
    SqlChunk(")") at 68-68
  ]) at 35-70
])
`;

exports[`parse("SELECT ':'") 1`] = `Error("Unexpected : symbol not followed by a parameter name. If you meant to simply insert :, please escape it with a backslash \\\\:" at 8-9)`;

exports[`parse("SELECT '\\:'") 1`] = `
Ok({"name":null} [
  SqlChunk("SELECT ':'") at 0-10
])
`;

exports[`parse("SELECT '\\:num\\:raw<1|2>'") 1`] = `
Ok({"name":null} [
  SqlChunk("SELECT ':num:raw<1|2>'") at 0-23
])
`;

exports[`parse("SELECT :foo = :bar") 1`] = `
Ok({"name":null} [
  SqlChunk("SELECT ") at 0-6
  Parameter("foo") at 7-10
  SqlChunk(" = ") at 11-13
  Parameter("bar") at 14-17
])
`;

exports[`parse("SELECT :foo = :foo") 1`] = `Error("The name \\"foo\\" is already used for another parameter" at 14-17)`;

exports[`parse("SELECT :num:raw<<<1<|>|||2>>>") 1`] = `
Ok({"name":null} [
  SqlChunk("SELECT ") at 0-6
  RawParameter("num" [
    "1<|>"
    "2"
  ]) at 7-28
])
`;

exports[`parse("SELECT :num:raw<<<1|||2>>") 1`] = `Error("Was expecting a raw parameter close sequence >>>, but reached the end of the string" at 25)`;

exports[`parse("SELECT :num:raw<>") 1`] = `
Ok({"name":null} [
  SqlChunk("SELECT ") at 0-6
  RawParameter("num" [
    ""
  ]) at 7-16
])
`;

exports[`parse("SELECT :num:raw<1,|> 2") 1`] = `
Ok({"name":null} [
  SqlChunk("SELECT ") at 0-6
  RawParameter("num" [
    "1,"
    ""
  ]) at 7-19
  SqlChunk(" 2") at 20-21
])
`;

exports[`parse("SELECT :num:raw<1|2>") 1`] = `
Ok({"name":null} [
  SqlChunk("SELECT ") at 0-6
  RawParameter("num" [
    "1"
    "2"
  ]) at 7-19
])
`;

exports[`parse("SELECT 1") 1`] = `
Ok({"name":null} [
  SqlChunk("SELECT 1") at 0-7
])
`;

exports[`parse("SELECT 1/* @name: abc*/") 1`] = `
Ok({"name":null} [
  SqlChunk("SELECT 1") at 0-7
  BlockComment(" @name: abc") at 8-22
])
`;

exports[`parse("SELECT 1/* test /* test2 ") 1`] = `Error("Was expecting a block comment close sequence */, but reached the end of the string" at 25)`;

exports[`parse("SELECT 1/* test") 1`] = `Error("Was expecting a block comment close sequence */, but reached the end of the string" at 15)`;

exports[`parseFile("-- @separator:### 
SELECT 1###SELECT 2") 1`] = `
Ok("###" [
  ({"name":null} [
    SqlChunk("\\nSELECT 1") at 18-26
  ])
  ({"name":null} [
    SqlChunk("SELECT 2") at 30-37
  ])
])
`;

exports[`parseFile("SELECT 1;SELECT 2;") 1`] = `
Ok(";" [
  ({"name":null} [
    SqlChunk("SELECT 1") at 0-7
  ])
  ({"name":null} [
    SqlChunk("SELECT 2") at 9-16
  ])
])
`;
