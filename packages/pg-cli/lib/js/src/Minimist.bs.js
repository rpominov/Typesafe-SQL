// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Js_types = require("rescript/lib/js/js_types.js");
var Minimist = require("minimist");

function get(r, k) {
  var $$float = Js_types.classify(r[k]);
  if (typeof $$float === "number") {
    switch ($$float) {
      case /* JSFalse */0 :
          return {
                  TAG: /* Bool */0,
                  _0: false
                };
      case /* JSTrue */1 :
          return {
                  TAG: /* Bool */0,
                  _0: true
                };
      case /* JSNull */2 :
      case /* JSUndefined */3 :
          return /* Unset */0;
      
    }
  } else {
    switch ($$float.TAG | 0) {
      case /* JSNumber */0 :
          return {
                  TAG: /* Float */2,
                  _0: $$float._0
                };
      case /* JSString */1 :
          return {
                  TAG: /* String */1,
                  _0: $$float._0
                };
      default:
        throw {
              RE_EXN_ID: "Assert_failure",
              _1: [
                "Minimist.res",
                15,
                9
              ],
              Error: new Error()
            };
    }
  }
}

function parse(parametersOpt, flags, aliases, stopEarly, separate, onUnknown, argv) {
  var parameters = parametersOpt !== undefined ? parametersOpt : [];
  return Minimist(argv, {
              string: ["_"].concat(parameters),
              boolean: flags,
              alias: aliases,
              stopEarly: stopEarly,
              "--": separate,
              unknown: onUnknown
            });
}

exports.get = get;
exports.parse = parse;
/* minimist Not a pure module */
