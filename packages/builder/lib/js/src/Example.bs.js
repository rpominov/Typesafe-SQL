// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var PathRebuild = require("rescript-path-rebuild/lib/js/PathRebuild.bs.js");
var Caml_splice_call = require("rescript/lib/js/caml_splice_call.js");
var Fs$TypesafeSqlBuilder = require("./Fs.bs.js");
var Steps$TypesafeSqlBuilder = require("./Steps.bs.js");
var Promise$TypesafeSqlBuilder = require("./Promise.bs.js");
var DescribeQuery = require("@typesafe-sql/describe-query");

function main(client) {
  var root = Fs$TypesafeSqlBuilder.resoloveRoot(undefined);
  var handleFile = function (src) {
    console.log(src);
    var dest = PathRebuild.transformExn("{0..-2}.json")(undefined, src);
    return Promise$TypesafeSqlBuilder.chain(Promise$TypesafeSqlBuilder.chainOk(Promise$TypesafeSqlBuilder.chainOk(Promise$TypesafeSqlBuilder.chainOk(Fs$TypesafeSqlBuilder.read(Fs$TypesafeSqlBuilder.joinPath(root, src)), Steps$TypesafeSqlBuilder.Parse.asyncParse), (function (parsed) {
                          return Promise$TypesafeSqlBuilder.chainOk(Steps$TypesafeSqlBuilder.Describe.describeMany(client, parsed.map(function (x) {
                                              return x.processedStatement;
                                            })), (function (__x) {
                                        return Steps$TypesafeSqlBuilder.Generate.generate(parsed, __x, Steps$TypesafeSqlBuilder.Generate.exampleGenerator);
                                      }));
                        })), (function (__x) {
                      return Fs$TypesafeSqlBuilder.write(Fs$TypesafeSqlBuilder.joinPath(root, dest), __x);
                    })), (function (result) {
                  if (result.TAG !== /* Ok */0) {
                    Caml_splice_call.spliceApply(console.error, [result._0.msg]);
                  }
                  return Promise$TypesafeSqlBuilder.resolve(undefined);
                }));
  };
  return Promise$TypesafeSqlBuilder.chain(Fs$TypesafeSqlBuilder.resolve(root, ["**/*.sql"]), (function (result) {
                if (result.TAG === /* Ok */0) {
                  return Promise.all(result._0.map(handleFile));
                }
                Caml_splice_call.spliceApply(console.error, [result._0.msg]);
                return Promise$TypesafeSqlBuilder.resolve([]);
              }));
}

Promise$TypesafeSqlBuilder.done(DescribeQuery.createClient({
          user: "testuser",
          password: "testpassword",
          host: "localhost",
          database: "testdatabase"
        }), (function (client) {
        return Promise$TypesafeSqlBuilder.done(main(client), (function (param) {
                      client.terminate();
                      
                    }));
      }));

var DescribeQuery$1;

exports.DescribeQuery = DescribeQuery$1;
exports.main = main;
/*  Not a pure module */
