// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Process = require("process");
var Minimist = require("minimist");
var Caml_option = require("rescript/lib/js/caml_option.js");

function getBool(r, k) {
  var val = r[k];
  if (typeof val === "boolean") {
    return val;
  }
  
}

function getString(r, k) {
  var val = r[k];
  if (typeof val === "string") {
    return val;
  }
  
}

function parse(stringKeysOpt, boolKeys, aliases, stopEarly, separate, onUnknown, argv) {
  var stringKeys = stringKeysOpt !== undefined ? stringKeysOpt : [];
  var tmp = {
    string: ["_"].concat(stringKeys)
  };
  if (boolKeys !== undefined) {
    tmp.boolean = Caml_option.valFromOption(boolKeys);
  }
  if (aliases !== undefined) {
    tmp.alias = Caml_option.valFromOption(aliases);
  }
  if (stopEarly !== undefined) {
    tmp.stopEarly = stopEarly;
  }
  if (separate !== undefined) {
    tmp["--"] = separate;
  }
  if (onUnknown !== undefined) {
    tmp.unknown = Caml_option.valFromOption(onUnknown);
  }
  return Minimist(argv, tmp);
}

var Minimist$1 = {
  getBool: getBool,
  getString: getString,
  parse: parse
};

console.log(getBool(parse([], ["version"], {
              version: "v"
            }, undefined, undefined, undefined, Process.argv.slice(2)), "version"));

exports.Minimist = Minimist$1;
/*  Not a pure module */
